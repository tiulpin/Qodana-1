<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "https://resources.jetbrains.com/stardust/html-entities.dtd">

<topic xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/stardust/topic.v2.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       title="Quality gate"
       id="quality-gate.xml">


    <!-- I need to find out if the threshold problem still makes Qodana run, or is it stopped -->

    <p>Quality gate is the number of codebase problems that serves as a threshold. One the threshold amount of problems
        is detected, %product% terminates the build in a CI/CD pipeline. </p>

    <img src="quality-gate.png" dark-src="quality-gate.png" width="706" alt="Quality gate diagram"/>

    <p>This section covers the following cases of setting the quality gate feature:</p>
    <list>
        <li>Local run using the CLI command</li>
        <li>Running using GitHub actions</li>
        <li>Running using Jenkins</li>
        <li>Running using Gitlab CI</li>
    </list>

    <chapter id="quality-gate-local-run" title="Local run">
        <!-- This needs to be rephrased -->
        <p>Although local %product% run implies it being outside a CI/CD pipeline, this example better demonstrates how
            to configure the quality gate feature.</p>

                <p>Run the following CLI command:</p>
                <code style="block" lang="shell">
                    docker run --rm -it -p 8080:8080 \
                    -v &lt;source-directory&gt;/:/data/project/ \
                    -v &lt;output-directory&gt;/:/data/results/ \
                    jetbrains/%linter-shell% --show-report
                </code>
                <p>
                    where <code>source-directory</code> and <code>output-directory</code> are full local paths to,
                    respectively, the project source code directory and the analysis results directory.
                </p>

    <chapter id="quality-gate-github-actions" title="GitHub Actions">

        <p>You can enforce GitHub to block the merge of pull requests if the Qodana quality gate has failed. To do it, create a
            branch protection rule as described below:</p>

        <procedure>
            <step>Create new or open an existing GitHub workflow with the Qodana Action specified.</step>
            <step><p>Set the workflow to run on <emphasis>pull_request</emphasis> events that target the
                <emphasis>main</emphasis> branch.</p>
                <code style="block" lang="yaml">
                    on:
                    pull_request:
                    branches:
                    - main
                </code>
                <p>Instead of <emphasis>main</emphasis>, you can specify your branch here. </p>
            </step>
            <step>Set <emphasis>1</emphasis> for the Qodana Action <emphasis>fail-threshold</emphasis> option.</step>
            <step>Under your repository name, click <menupath>Settings</menupath>.</step>
            <step>On the left menu, click <menupath>Branches</menupath>.</step>
            <step>In the branch protection rules section, click <menupath>Add rule</menupath>.</step>
            <step>Add <emphasis>main</emphasis> to <menupath>Branch name pattern</menupath>.</step>
            <step>Select <menupath>Require status checks to pass before merging</menupath>.</step>
            <step>Search for the <emphasis>Qodana</emphasis> status check, then check it.</step>
            <step>Click <menupath>Create</menupath>.</step>
        </procedure>

        <p>For more information about branch protection rules, refer to the original
            <a href="https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule">GitHub Documentation</a>.</p>

    </chapter>

    <chapter id="quality-gate-jenkins" title="Jenkins">

    </chapter>

    <chapter id="quality-gate-gitlab-ci" title="GitLab CI">


    </chapter>


    </chapter>


</topic>
